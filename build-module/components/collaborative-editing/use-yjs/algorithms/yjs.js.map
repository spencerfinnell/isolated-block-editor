{"version":3,"file":"yjs.js","names":["yjs","diff","isEqual","applyHTMLDelta","richTextMapToHTML","sanitizeHTML","updateBlocksDoc","yDocBlocks","blocks","richTextHint","clientId","arguments","length","undefined","has","set","Map","order","get","Array","byClientId","currentOrder","toArray","orderDiff","simpleDiffArray","map","block","slice","index","remove","forEach","_clientId","insert","includes","delete","_block","innerBlocks","isPreexisting","richTexts","getKnownRichTextAttributes","attributeKey","updateRichText","newBlock","knownRichTextAttributes","attributeSet","Set","keys","add","_ref","newText","attributes","blockWithRichTexts","XmlText","richTextMap","oldText","updateCommentsDoc","commentsDoc","comments","comment","currentDoc","_id","isNewDoc","field","updateCommentRepliesDoc","replies","repliesDoc","reply","currentReplyDoc","updatePostDoc","doc","newPost","postDoc","getMap","title","commentsDocToArray","Object","entries","toJSON","_ref2","id","commentDoc","type","content","createdAt","status","start","end","authorId","authorName","_ref3","replyId","entryDoc","sort","a","b","blocksDocToArray","sanitize","richTextsAsStrings","from","reduce","acc","_ref4","key","value","postDocToObject"],"sources":["../../../../../src/components/collaborative-editing/use-yjs/algorithms/yjs.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as yjs from 'yjs';\nimport * as diff from 'lib0/diff';\nimport { isEqual } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { applyHTMLDelta, richTextMapToHTML } from './rich-text';\nimport sanitizeHTML from './sanitize-html';\n\n/**\n * @typedef {Object} PostObject\n * @property {string} title\n * @property {Object[]} blocks\n * @property {Object[]} comments\n */\n\n/** @typedef {import('../yjs-doc').RichTextHint} RichTextHint */\n\n/**\n * Updates the block doc with the local blocks block changes.\n *\n * @param {yjs.Map} yDocBlocks Blocks doc.\n * @param {Array}   blocks     Updated blocks.\n * @param {RichTextHint} [richTextHint] Indication that a certain block attribute is a RichText, inferred from the current editor selection.\n * @param {string}  clientId   Current clientId.\n */\nexport function updateBlocksDoc( yDocBlocks, blocks, richTextHint, clientId = '' ) {\n\tif ( ! yDocBlocks.has( 'order' ) ) {\n\t\tyDocBlocks.set( 'order', new yjs.Map() );\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\tif ( ! order.has( clientId ) ) order.set( clientId, new yjs.Array() );\n\torder = order.get( clientId );\n\tif ( ! yDocBlocks.has( 'byClientId' ) ) {\n\t\tyDocBlocks.set( 'byClientId', new yjs.Map() );\n\t}\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\tconst currentOrder = order.toArray();\n\tconst orderDiff = diff.simpleDiffArray(\n\t\tcurrentOrder,\n\t\tblocks.map( ( block ) => block.clientId )\n\t);\n\tcurrentOrder\n\t\t.slice( orderDiff.index, orderDiff.remove )\n\t\t.forEach( ( _clientId ) => ! orderDiff.insert.includes( _clientId ) && byClientId.delete( _clientId ) );\n\torder.delete( orderDiff.index, orderDiff.remove );\n\torder.insert( orderDiff.index, orderDiff.insert );\n\n\tif ( ! yDocBlocks.has( 'richTexts' ) ) {\n\t\tyDocBlocks.set( 'richTexts', new yjs.Map() );\n\t}\n\n\tfor ( const _block of blocks ) {\n\t\tconst { innerBlocks, ...block } = _block;\n\t\tconst isPreexisting = byClientId.has( block.clientId );\n\n\t\tif ( ! isPreexisting || ! isEqual( byClientId.get( block.clientId ), block ) ) {\n\t\t\tconst richTexts = yDocBlocks.get( 'richTexts' );\n\n\t\t\tgetKnownRichTextAttributes( block.clientId, richTextHint, richTexts ).forEach( ( attributeKey ) => {\n\t\t\t\tupdateRichText( {\n\t\t\t\t\tnewBlock: block,\n\t\t\t\t\tattributeKey,\n\t\t\t\t\trichTexts,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tbyClientId.set( block.clientId, block );\n\t\t}\n\n\t\tupdateBlocksDoc( yDocBlocks, innerBlocks, richTextHint, block.clientId );\n\t}\n}\n\n/**\n * @param clientId\n * @param richTextHint\n * @param richTexts\n * @return {Set<string>}\n */\nfunction getKnownRichTextAttributes( clientId, richTextHint, richTexts ) {\n\tconst knownRichTextAttributes = richTexts.has( clientId ) && richTexts.get( clientId );\n\tconst attributeSet = knownRichTextAttributes ? new Set( knownRichTextAttributes.keys() ) : new Set();\n\tif ( richTextHint && clientId === richTextHint.clientId ) {\n\t\tattributeSet.add( richTextHint.attributeKey );\n\t}\n\treturn attributeSet;\n}\n\n/**\n * Updates the RichText value in the richTexts yMap using index-based manipulation.\n *\n * @param {Object} args\n * @param {Object} args.newBlock\n * @param {string} args.attributeKey\n * @param {yjs.Map} args.richTexts\n */\nexport function updateRichText( { newBlock, attributeKey, richTexts } ) {\n\tconst newText = newBlock.attributes[ attributeKey ];\n\n\tif ( ! richTexts.has( newBlock.clientId ) ) {\n\t\trichTexts.set( newBlock.clientId, new yjs.Map() );\n\t}\n\tconst blockWithRichTexts = richTexts.get( newBlock.clientId );\n\tif ( ! blockWithRichTexts.has( attributeKey ) ) {\n\t\tblockWithRichTexts.set(\n\t\t\tattributeKey,\n\t\t\tnew yjs.Map( [\n\t\t\t\t[ 'xmlText', new yjs.XmlText() ],\n\t\t\t\t[ 'multilineTag', undefined ],\n\t\t\t\t[ 'replacements', new yjs.Array() ],\n\t\t\t\t[ 'multilineWrapperReplacements', new yjs.Array() ],\n\t\t\t] )\n\t\t);\n\t}\n\n\tconst richTextMap = blockWithRichTexts.get( attributeKey );\n\tconst oldText = richTextMapToHTML( blockWithRichTexts.get( attributeKey ) );\n\tapplyHTMLDelta( oldText, newText, richTextMap );\n}\n\n/**\n * Updates the comments doc with the local comments changes.\n *\n * @param {yjs.Map} commentsDoc  comments doc.\n * @param {Object[]}  comments     Updated comments.\n */\nexport function updateCommentsDoc( commentsDoc, comments = [] ) {\n\tcomments.forEach( ( comment ) => {\n\t\tlet currentDoc = commentsDoc.get( comment._id );\n\t\tconst isNewDoc = ! currentDoc;\n\t\tif ( ! currentDoc ) {\n\t\t\tcommentsDoc.set( comment._id, new yjs.Map() );\n\t\t}\n\t\tcurrentDoc = commentsDoc.get( comment._id );\n\t\t// Update regular fields\n\t\t[ 'type', 'content', 'createdAt', 'status', 'start', 'end', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentDoc.get( field ) !== comment[ field ] ) {\n\t\t\t\tcurrentDoc.set( field, comment[ field ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( isNewDoc ) {\n\t\t\tcurrentDoc.set( 'replies', new yjs.Map() );\n\t\t}\n\n\t\tupdateCommentRepliesDoc( currentDoc.get( 'replies' ), comment.replies );\n\t} );\n}\n\n/**\n * Updates the replies doc with the local replies changes.\n *\n * @param {yjs.Map} repliesDoc  replies doc.\n * @param {Object[]}  replies     Updated replies.\n */\nexport function updateCommentRepliesDoc( repliesDoc, replies = [] ) {\n\treplies.forEach( ( reply ) => {\n\t\tlet currentReplyDoc = repliesDoc.get( reply._id );\n\t\tconst isNewDoc = ! currentReplyDoc;\n\t\tif ( ! currentReplyDoc ) {\n\t\t\trepliesDoc.set( reply._id, new yjs.Map() );\n\t\t}\n\t\tcurrentReplyDoc = repliesDoc.get( reply._id );\n\t\t[ 'content', 'createdAt', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentReplyDoc.get( field ) !== reply[ field ] ) {\n\t\t\t\tcurrentReplyDoc.set( field, reply[ field ] );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Updates the post doc with the local post changes.\n *\n * @param {yjs.Doc} doc     Shared doc.\n * @param {PostObject}  newPost Updated post.\n * @param {RichTextHint} [richTextHint]\n */\nexport function updatePostDoc( doc, newPost, richTextHint ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tif ( postDoc.get( 'title' ) !== newPost.title ) {\n\t\tpostDoc.set( 'title', newPost.title );\n\t}\n\tif ( ! postDoc.get( 'blocks' ) ) {\n\t\tpostDoc.set( 'blocks', new yjs.Map() );\n\t}\n\tupdateBlocksDoc( postDoc.get( 'blocks' ), newPost.blocks || [], richTextHint );\n\tif ( ! postDoc.get( 'comments' ) ) {\n\t\tpostDoc.set( 'comments', new yjs.Map() );\n\t}\n\tupdateCommentsDoc( postDoc.get( 'comments' ), newPost.comments );\n}\n\n/**\n * Converts the comments doc into a comment list.\n *\n * @param {yjs.Map} commentsDoc Comments doc.\n * @return {Array} Comment list.\n */\nexport function commentsDocToArray( commentsDoc ) {\n\tif ( ! commentsDoc ) {\n\t\treturn [];\n\t}\n\n\treturn Object.entries( commentsDoc.toJSON() ).map( ( [ id, commentDoc ] ) => {\n\t\treturn {\n\t\t\t_id: id,\n\t\t\ttype: commentDoc.type,\n\t\t\tcontent: commentDoc.content,\n\t\t\tcreatedAt: commentDoc.createdAt,\n\t\t\tstatus: commentDoc.status,\n\t\t\tstart: commentDoc.start,\n\t\t\tend: commentDoc.end,\n\t\t\tauthorId: commentDoc.authorId,\n\t\t\tauthorName: commentDoc.authorName,\n\t\t\treplies: Object.entries( commentDoc.replies )\n\t\t\t\t.map( ( [ replyId, entryDoc ] ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: replyId,\n\t\t\t\t\t\tcontent: entryDoc.content,\n\t\t\t\t\t\tcreatedAt: entryDoc.createdAt,\n\t\t\t\t\t\tauthorId: entryDoc.authorId,\n\t\t\t\t\t\tauthorName: entryDoc.authorName,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.sort( ( a, b ) => a.createdAt - b.createdAt ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the block doc into a block list.\n *\n * @param {yjs.Map} yDocBlocks Block doc.\n * @param {Object} [opts]\n * @param {string}  [opts.clientId] Current block clientId.\n * @param {boolean}  [opts.sanitize] Whether to sanitize the block attribute values.\n *\n * @return {Array} Block list.\n */\n// @ts-ignore\nexport function blocksDocToArray( yDocBlocks, { clientId = '', sanitize = false } = {} ) {\n\tif ( ! yDocBlocks ) {\n\t\treturn [];\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\torder = order.get( clientId )?.toArray();\n\tif ( ! order ) return [];\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\n\treturn order.map( ( _clientId ) => {\n\t\tconst richTextMap = yDocBlocks.get( 'richTexts' ).get( _clientId ) || new yjs.Map();\n\t\tconst richTextsAsStrings = Array.from( richTextMap.entries() ).reduce( ( acc, [ key, value ] ) => {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[ key ]: richTextMapToHTML( value ),\n\t\t\t};\n\t\t}, {} );\n\n\t\tconst attributes = {\n\t\t\t...byClientId.get( _clientId ).attributes,\n\t\t\t...richTextsAsStrings,\n\t\t};\n\n\t\tif ( sanitize ) {\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tattributes[ key ] = sanitizeHTML( attributes[ key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...byClientId.get( _clientId ),\n\t\t\tattributes,\n\t\t\tinnerBlocks: blocksDocToArray( yDocBlocks, { clientId: _clientId, sanitize } ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the post doc into a post object.\n *\n * @param {yjs.Doc} doc Shared doc.\n * @param {Object} [opts]\n * @param {boolean} [opts.sanitize]\n *\n * @return {PostObject} Post object.\n */\n// @ts-ignore\nexport function postDocToObject( doc, { sanitize = false } = {} ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tconst blocks = blocksDocToArray( postDoc.get( 'blocks' ), { sanitize } );\n\tconst comments = commentsDocToArray( postDoc.get( 'comments' ) );\n\n\treturn {\n\t\ttitle: postDoc.get( 'title' ) || '',\n\t\tblocks,\n\t\tcomments,\n\t};\n}\n"],"mappings":"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"}